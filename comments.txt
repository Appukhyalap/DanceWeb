


const { MongoClient, ServerApiVersion } = require('mongodb');
const uri = "mongodb+srv://Shantaveer:<db_password>@cluster0.tx6by.mongodb.net/?appName=Cluster0";

// Create a MongoClient with a MongoClientOptions object to set the Stable API version
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});

async function run() {
  try {
    // Connect the client to the server	(optional starting in v4.7)
    await client.connect();
    // Send a ping to confirm a successful connection
    await client.db("admin").command({ ping: 1 });
    console.log("Pinged your deployment. You successfully connected to MongoDB!");
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
  }
}
run().catch(console.dir);

USERNME : USER1
PASS : YG7RE7YY
mongodb://Shantaveer:<db_password>@cluster0-shard-00-00.tx6by.mongodb.net:27017,cluster0-shard-00-01.tx6by.mongodb.net:27017,cluster0-shard-00-02.tx6by.mongodb.net:27017/?replicaSet=atlas-35073i-shard-0&ssl=true&authSource=admin&retryWrites=true&w=majority
&appName=Cluster0


npm init -y //install package.json
1. install packet.json
2. // Add to package .json "scripts": {
    "start": "node app.js",
    "dev" : "node --watch app.js"
  },

node --watch .\app.js // always run in background dont need to switch on off

3. git init
4. git add .
5. git commit -m "type_your_message"
6. add remote // files go to git and create new repository
7. copy the code like(git remote add origin https://github.com/Appukhyalap/dance.git
                      git branch -M main
                      git push -u origin main)
8. come to git and refresh 
9. come to render 